#!/usr/bin/env ruby
require 'octokit'
require 'faraday-http-cache'
require 'colorize'
require 'terminal-table'

org = ARGV.shift || 'lokalebasen'

stack = Faraday::RackBuilder.new do |builder|
  builder.use Faraday::HttpCache
  builder.use Octokit::Response::RaiseError
  builder.adapter Faraday.default_adapter
end
Octokit.middleware = stack

client = Octokit::Client.new(access_token: ENV['GITHUB_ACCESS_TOKEN'])
client.auto_paginate = true

table = Terminal::Table.new(headings: ['title', 'user', 'url']) do |t|
  repos = client.org_repos(org)
  first = true
  repos.each do |repo|
    print '.'

    pull_requests = client.pull_requests(repo.id, state: 'open')
    next if pull_requests.size == 0

    t.add_separator unless first
    first = false

    t.add_row ["#{repo.name} (#{pull_requests.size})".blue, '', '']
    pull_requests.each do |pr|
      t.add_row [pr.title, pr.user.login.red, pr.html_url.underline]
    end
  end
end

puts
puts table
